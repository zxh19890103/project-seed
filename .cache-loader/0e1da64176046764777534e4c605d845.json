{"remainingRequest":"/Users/zxh/Projects/github/project-seed/node_modules/thread-loader/dist/cjs.js??ref--4-1!/Users/zxh/Projects/github/project-seed/node_modules/babel-loader/lib/index.js??ref--4-2!/Users/zxh/Projects/github/project-seed/node_modules/ts-loader/index.js??ref--4-3!/Users/zxh/Projects/github/project-seed/typescript/src/index.ts","dependencies":[{"path":"/Users/zxh/Projects/github/project-seed/typescript/src/index.ts","mtime":1543764768007},{"path":"/Users/zxh/Projects/github/project-seed/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/zxh/Projects/github/project-seed/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/zxh/Projects/github/project-seed/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/zxh/Projects/github/project-seed/node_modules/ts-loader/index.js","mtime":1543302582000}],"contextDependencies":[],"result":["import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nvar appDiv = document.querySelector('#app');\nimport './body.less';\nimport './style.scss';\nimport TAGS from './tags';\nimport { PropType } from './PropType.enum';\nimport './Bird';\nimport './farmer.jpg';\nvar ioAsync = import(\n/* webpackChunkName: \"sock\" */\n'socket.io-client');\n/**\n * E\n */\n\nvar E =\n/*#__PURE__*/\nfunction () {\n  function E(root) {\n    var _this = this;\n\n    _classCallCheck(this, E);\n\n    this.root = root;\n    this.current = root;\n    var that = new Proxy({}, {\n      get: function get(target, prop) {\n        var propType = _this.getPropType(prop);\n\n        switch (propType) {\n          case PropType.Tag:\n            {\n              _this.current = _this.firstChild(prop);\n              return _this.Q;\n            }\n\n          case PropType.Query:\n            {\n              switch (prop) {\n                case 'n':\n                  {\n                    return function (n) {\n                      var sibling = _this.nSibling(n);\n\n                      _this.current = sibling;\n                      return _this.Q;\n                    };\n                  }\n\n                default:\n                  {\n                    return function (val) {\n                      return _this.Q;\n                    };\n                  }\n              }\n            }\n\n          case PropType.Value:\n            {\n              var cur = _this.current;\n              _this.current = root;\n              return cur;\n            }\n\n          default:\n            {\n              return _this.Q;\n            }\n        }\n      }\n    });\n    this.Q = that;\n  }\n\n  _createClass(E, [{\n    key: \"getPropType\",\n    value: function getPropType(prop) {\n      if (TAGS.indexOf(prop) > -1) {\n        return PropType.Tag;\n      } else if (prop === 'n' || prop === 'id') {\n        return PropType.Query;\n      } else {\n        return PropType.Value;\n      }\n    }\n  }, {\n    key: \"nSibling\",\n    value: function nSibling(n) {\n      var sibling = this.current,\n          i = 0,\n          safe = 0;\n\n      while (sibling = sibling.nextElementSibling) {\n        if (sibling.nodeName === this.current.nodeName) {\n          i++;\n          if (i === n) return sibling;\n        }\n\n        safe++;\n        if (safe === 68) break;\n      }\n\n      return null;\n    }\n  }, {\n    key: \"firstChild\",\n    value: function firstChild(tag) {\n      var entry = this.current.childNodes.entries();\n      var res;\n\n      while (res = entry.next()) {\n        if (res.done) break;\n\n        var _res$value = _slicedToArray(res.value, 2),\n            i = _res$value[0],\n            n = _res$value[1];\n\n        if (n.nodeType === 1 && n.nodeName === tag.toUpperCase()) {\n          return n;\n        }\n      }\n\n      return null;\n    }\n  }]);\n\n  return E;\n}();\n\nvar q = new E(appDiv).Q;\n\nif (module.hot) {\n  module.hot.accept(['./Bird', './Animal'], function () {\n    console.log('Accepting Good!');\n  });\n}",null]}