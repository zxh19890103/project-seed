{"remainingRequest":"/Users/zxh/Projects/github/project-seed/node_modules/thread-loader/dist/cjs.js??ref--4-1!/Users/zxh/Projects/github/project-seed/node_modules/ts-loader/index.js??ref--4-2!/Users/zxh/Projects/github/project-seed/typescript/src/index.ts","dependencies":[{"path":"/Users/zxh/Projects/github/project-seed/typescript/src/index.ts","mtime":1543745325041},{"path":"/Users/zxh/Projects/github/project-seed/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/zxh/Projects/github/project-seed/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/zxh/Projects/github/project-seed/node_modules/ts-loader/index.js","mtime":1543302582000}],"contextDependencies":[],"result":["const appDiv = document.querySelector('#app');\nimport TAGS from './tags';\nimport { PropType } from './PropType.enum';\nimport './Bird';\nrequire('after');\n/**\n * E\n */\nclass E {\n    constructor(root) {\n        this.root = root;\n        this.current = root;\n        const that = new Proxy({}, {\n            get: (target, prop) => {\n                const propType = this.getPropType(prop);\n                switch (propType) {\n                    case PropType.Tag: {\n                        this.current = this.firstChild(prop);\n                        return this.Q;\n                    }\n                    case PropType.Query: {\n                        switch (prop) {\n                            case 'n': {\n                                return (n) => {\n                                    const sibling = this.nSibling(n);\n                                    this.current = sibling;\n                                    return this.Q;\n                                };\n                            }\n                            default: {\n                                return (val) => {\n                                    return this.Q;\n                                };\n                            }\n                        }\n                    }\n                    case PropType.Value: {\n                        const cur = this.current;\n                        this.current = root;\n                        return cur;\n                    }\n                    default: {\n                        return this.Q;\n                    }\n                }\n            },\n        });\n        this.Q = that;\n    }\n    getPropType(prop) {\n        if (TAGS.indexOf(prop) > -1) {\n            return PropType.Tag;\n        }\n        else if (prop === 'n' || prop === 'id') {\n            return PropType.Query;\n        }\n        else {\n            return PropType.Value;\n        }\n    }\n    nSibling(n) {\n        let sibling = this.current, i = 0, safe = 0;\n        while (sibling = sibling.nextElementSibling) {\n            if (sibling.nodeName === this.current.nodeName) {\n                i++;\n                if (i === n)\n                    return sibling;\n            }\n            safe++;\n            if (safe === 68)\n                break;\n        }\n        return null;\n    }\n    firstChild(tag) {\n        const entry = this.current.childNodes.entries();\n        let res;\n        while ((res = entry.next())) {\n            if (res.done)\n                break;\n            const [i, n] = res.value;\n            if (n.nodeType === 1 && n.nodeName === tag.toUpperCase()) {\n                return n;\n            }\n        }\n        return null;\n    }\n}\nconst q = new E(appDiv).Q;\nif (module.hot) {\n    module.hot.accept(['./Bird', './Animal'], () => {\n        console.log('Accepting Good!');\n    });\n}\n",{"version":3,"file":"/Users/zxh/Projects/github/project-seed/typescript/src/index.ts","sourceRoot":"","sources":["/Users/zxh/Projects/github/project-seed/typescript/src/index.ts"],"names":[],"mappings":"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","sourcesContent":["const appDiv = document.querySelector('#app')\n\nimport TAGS from './tags'\nimport { PropType } from './PropType.enum'\nimport './Bird'\n\nrequire('after')\n\ninterface IQuery {\n  div: IQuery,\n  n: (idx: number) => IQuery,\n  id: (value: string) => IQuery\n}\n\n/**\n * E\n */\nclass E {\n    public Q: IQuery\n    private current: Element\n    constructor(private root: Element) {\n        this.current = root\n        const that = new Proxy({}, {\n            get: (target, prop: string) => {\n                const propType = this.getPropType(prop)\n                switch (propType) {\n                    case PropType.Tag: {\n                        this.current = this.firstChild(prop)\n                        return this.Q\n                    }\n                    case PropType.Query: {\n                        switch (prop) {\n                            case 'n': {\n                                return (n: number) => {\n                                    const sibling = this.nSibling(n)\n                                    this.current = sibling\n                                    return this.Q\n                                }\n                            }\n                            default: {\n                                return (val: string | number) => {\n                                    return this.Q\n                                }\n                            }\n                        }\n                    }\n                    case PropType.Value: {\n                        const cur = this.current\n                        this.current = root\n                        return cur\n                    }\n                    default: {\n                        return this.Q\n                    }\n                }\n            },\n        })\n        this.Q = that as IQuery\n    }\n\n    private getPropType(prop: string): PropType {\n      if (TAGS.indexOf(prop) > -1) {\n        return PropType.Tag\n      } else if (prop === 'n' || prop === 'id') {\n        return PropType.Query\n      } else {\n        return PropType.Value\n      }\n    }\n\n    private nSibling(n: number): Element {\n      let sibling = this.current, i = 0, safe = 0\n      while (sibling = sibling.nextElementSibling) {\n        if (sibling.nodeName === this.current.nodeName) {\n          i ++\n          if (i === n)\n            return sibling\n        }\n        safe ++\n        if (safe === 68) break\n      }\n      return null\n    }\n\n    private firstChild(tag: string): Element {\n      const entry = this.current.childNodes.entries()\n      let res\n      while ((res = entry.next())) {\n          if (res.done) break\n          const [i, n] = res.value\n          if (n.nodeType === 1 && n.nodeName === tag.toUpperCase()) {\n            return n as Element\n          }\n        }\n      return null\n    }\n}\n\nconst q = new E(appDiv).Q\n\nif (module.hot) {\n  module.hot.accept(['./Bird', './Animal'], () => {\n    console.log('Accepting Good!')\n   })\n}\n"]}]}